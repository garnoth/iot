# this main directory contains the primary files to run the program

# stubs/ 
This directory contains the same system files but the subsystem classes are all configured to return a value of 55 and not connect to GPOI or board specific I/O
this is useful for testing the system as-is without the hardware. 
Running the stub system also allows us to calculate the overall power consumption of the system minus the power draw of a specific device/sensors/led

To run the program simply execute start.sh
	You need to edit the prefix= and name= lines in start.sh 
	For example, the gateway's certificate is: cb11952a43-certificate.pem.crt
	so I would set the prefix to cb11952a43

# config/ 
this directory contains the special configuration files for the raspberry pi OS that I needed to configure

# The MQTT message layout along with supported commands:

sensors/temp/gateway
"get" : "value"
sensors/pressure/gateway
"get" : "value"
sensors/humidity/gateway
"get" : "value"
sensors/altitude/gateway
"get" : "value"

sensors/soil/gateway
"get" : "value"

sensors/water/gateway
"get" : "state"
"get" : "total"
"get" : "cumulative"
"setTime" : "10"  # accepted range is 1-122
"set" : "on"
"set" : "off"
"set" : "clear"

sensors/led/gateway
"get" : "state"
"set" : "on"
"set" : "off"

sensors/info/gateway
"get" : "bulk"

sensors/cmd/gateway
"get" : "uptime"
"deviceState" : "disconnect"
"deviceState" : "reboot"
"deviceState" : "halt"

My program allows the gateway to also be a sensor/measuring device but it is not required
 
